import hudson.security.AuthorizationStrategy
import hudson.security.SecurityRealm
import jenkins.model.Jenkins
import org.jenkinsci.plugins.GithubAuthorizationStrategy
import org.jenkinsci.plugins.GithubSecurityRealm

String githubWebUri = '{{ jenkins_github_auth_weburi }}'
String githubApiUri = '{{ jenkins_github_auth_apiuri }}'
String clientID = '{{ jenkins_github_auth_clientid }}'
String clientSecret = '{{ jenkins_github_auth_clientsecret }}'
String oauthScopes = '{{ jenkins_github_auth_oauthscopes }}'

SecurityRealm github_realm = new GithubSecurityRealm(githubWebUri,
    githubApiUri,
    clientID,
    clientSecret,
    oauthScopes)

//check for equality, no need to modify the runtime if no settings changed
if(!github_realm.equals(Jenkins.instance.getSecurityRealm())) {
    Jenkins.instance.setSecurityRealm(github_realm)
    Jenkins.instance.save()
}

//permissions are ordered similar to web UI
//Admin User Names
String adminUserNames = '{{ jenkins_github_auth_admins }}'
//Participant in Organization
String organizationNames = '{{ jenkins_github_auth_org }}'
//Use Github repository permissions
boolean useRepositoryPermissions = false
//Grant READ permissions to all Authenticated Users
boolean authenticatedUserReadPermission = true
//Grant CREATE Job permissions to all Authenticated Users
boolean authenticatedUserCreateJobPermission = false
//Grant READ permissions for /github-webhook
boolean allowGithubWebHookPermission = false
//Grant READ permissions for /cc.xml
boolean allowCcTrayPermission = false
//Grant READ permissions for Anonymous Users
boolean allowAnonymousReadPermission = false
//Grant ViewStatus permissions for Anonymous Users
boolean allowAnonymousJobStatusPermission = false

AuthorizationStrategy github_authorization = new GithubAuthorizationStrategy(adminUserNames,
    authenticatedUserReadPermission,
    useRepositoryPermissions,
    authenticatedUserCreateJobPermission,
    organizationNames,
    allowGithubWebHookPermission,
    allowCcTrayPermission,
    allowAnonymousReadPermission,
    allowAnonymousJobStatusPermission)

//check for equality, no need to modify the runtime if no settings changed
if(!github_authorization.equals(Jenkins.instance.getAuthorizationStrategy())) {
    Jenkins.instance.setAuthorizationStrategy(github_authorization)
    Jenkins.instance.save()
}
